#include <SDL.h>
#include <iostream>
#include <stdio.h>
#include <SDL_image.h>
#include <string>

//Screen dimension constants
const int SCREEN_WIDTH = 1024;
const int SCREEN_HEIGHT = 768;

void csci437_error(const std::string& msg)
{
  std::cerr << msg << " (" << SDL_GetError() << ")" << std::endl;
  exit(0);
}

void csci437_img_error(const std::string& msg)
{
  std::cerr << msg << " (" << IMG_GetError() << ")" << std::endl;
  exit(0);
}

int main(int argc, char** argv)
{
    // Initialize SDL
    if( SDL_Init( SDL_INIT_VIDEO ) < 0 ) csci437_error("SDL could not initialize!");

    // Create window
    SDL_Window* window = SDL_CreateWindow( "CSCI-437 Skeleton", SDL_WINDOWPOS_CENTERED, SDL_WINDOWPOS_CENTERED, SCREEN_WIDTH, SCREEN_HEIGHT, SDL_WINDOW_SHOWN );
    if( window == NULL ) csci437_error("Window could not be created!");

    // Small delay to allow the system to create the window.
    SDL_Delay(100);

    //Create renderer
    SDL_Renderer *renderer = SDL_CreateRenderer(window, -1, SDL_RENDERER_ACCELERATED);
    if (renderer == NULL) csci437_error("Unable to create renderer!");

    //Load background image
    SDL_Surface *background = IMG_Load("../resource/board.png");

    if(background == NULL)
        csci437_img_error("Could not image!");

    SDL_Texture *texture = SDL_CreateTextureFromSurface(renderer,background);

    if (texture == NULL)
        csci437_error("Could not create texture from surface!");

    if(texture == NULL)
        SDL_ShowSimpleMessageBox(0, "Texture init error", SDL_GetError(), window);

    // delete image
    SDL_FreeSurface( background );
    background = NULL;

    /**Get window surface
    SDL_Surface* background = SDL_LoadPNG( "Board.png" );
    if(background == NULL) csci437_error("Unable to get window surface!");**/

    //Load Scene
      SDL_SetRenderDrawColor( renderer, 0, 0, 0, 255 );
      SDL_RenderClear( renderer );
      SDL_RenderPresent( renderer );

    // Update the surface
    //SDL_UpdateWindowSurface( window );

    //Load files


    //Load paddles


    //Load ball


    //Main game loop
    bool running = false;
    SDL_Event key;

    while (running == true)
    {

    }
}